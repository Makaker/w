import pygame

pygame.init()
font = pygame.font.Font(None, 30)


def debug(info, y=10, x=10):
    display_surface = pygame.display.get_surface()
    debug_surf = font.render(str(info), True, 'White')
    debug_rect = debug_surf.get_rect(topleft=(x, y))
    pygame.draw.rect(display_surface, 'black', debug_rect)
    display_surface.blit(debug_surf, debug_rect)

# pygame.init(): Эта строка инициализирует библиотеку Pygame, подготавливая окружение для создания
# игрового приложения.
#
# font = pygame.font.Font(None, 30): Здесь создается объект шрифта, который будет использоваться для
# отображения текста отладки. pygame.font.Font - это функция Pygame для создания объекта шрифта. None означает
# использование шрифта по умолчанию, а 30 - размер шрифта в пикселях.
#
# def debug(info, y=10, x=10):: Это определение функции debug. Она принимает три аргумента:
#
# info: Этот аргумент представляет собой информацию (например, значение переменной), которую вы хотите
# отобразить на экране.
# y=10: Это аргумент по умолчанию для вертикальной координаты, где будет отображаться текст отладки. По
# умолчанию это 10 пикселей сверху.
# x=10: Это аргумент по умолчанию для горизонтальной координаты, где будет отображаться текст отладки. По
# умолчанию это 10 пикселей слева.
# display_surface = pygame.display.get_surface(): Этой строкой получается поверхность, на которой будет
# отображаться текст отладки. pygame.display.get_surface() возвращает текущую активную поверхность Pygame,
# на которой происходит рендеринг.
#
# debug_surf = font.render(str(info), True, 'White'): Здесь создается поверхность с текстом отладки. font.render используется для создания изображения текста. Аргументы:
#
# str(info): Это текст, который будет отображаться. str(info) преобразует значение переменной info в строку.
# True: Этот аргумент указывает, что текст будет сглаженным (антиалиасинг включен).
# 'White': Это цвет текста. В данном случае, текст будет белого цвета.
# debug_rect = debug_surf.get_rect(topleft=(x, y)): Создается прямоугольник, определяющий местоположение и
# размер текста отладки. debug_surf.get_rect() возвращает прямоугольник, который охватывает текст, и с
# помощью topleft задаются координаты левого верхнего угла прямоугольника.
#
# pygame.draw.rect(display_surface, 'black', debug_rect): Эта строка рисует прямоугольник заданного
# цвета ('black') на той же поверхности, где отображается текст. Это нужно для того, чтобы создать фон для
# текста отладки, чтобы текст был читаемым на любом фоне.
#
# display_surface.blit(debug_surf, debug_rect): Здесь текст отладки "приклеивается" к фоновому прямоугольнику
# на поверхности. blit используется для отображения одной поверхности (в данном случае, debug_surf) на
# другой (фоновый прямоугольник).
#
# После определения этой функции вы можете вызывать ее в вашем игровом цикле, передавая в нее информацию,
# которую вы хотите отобразить на экране в режиме отладки. Например:

